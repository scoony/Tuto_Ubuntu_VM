 
Nous allons maintenant traiter la partie la plus complexe et subjective.
Chacun y va de sa petite recette pour optimiser au mieux.

Je vais vous mettre la mienne au jour d'aujourd'hui et du pourquoi j'ai fait ça (si j'ai une bonne raison... lol).

Je vais mettre des "xxx" dans mes exemples car nous n'aurons pas forcément les même valeurs.


## en dessous de "<currentMemory unit="KiB">xxx</currentMemory>"
# on ne partage pas la mémoire avec Ubuntu et on alloue immédiatement
  <memoryBacking>
    <access mode="private"/>
    <allocation mode="immediate"/>
  </memoryBacking>


## en dessous de "<iothreads>xxx</iothreads>"
# le CPU Pinning (terme barbare qui signifie qu'on précise quel thread du CPU on va allouer, pour mon processeur j'ai deux chiplets, chacun fait 6 core et donc 12 threads au total
# je laisse donc le premier chiplet pour mon Ubuntu et le deuxième je le dédie à ma VM
# j'ai installé lstopo ça aide (apt install hwloc)
  <cputune>
    <vcpupin vcpu="0" cpuset="6"/>
    <vcpupin vcpu="1" cpuset="18"/>
    <vcpupin vcpu="2" cpuset="7"/>
    <vcpupin vcpu="3" cpuset="19"/>
    <vcpupin vcpu="4" cpuset="8"/>
    <vcpupin vcpu="5" cpuset="20"/>
    <vcpupin vcpu="6" cpuset="9"/>
    <vcpupin vcpu="7" cpuset="21"/>
    <vcpupin vcpu="8" cpuset="10"/>
    <vcpupin vcpu="9" cpuset="22"/>
    <vcpupin vcpu="10" cpuset="11"/>
    <vcpupin vcpu="11" cpuset="23"/>
    <emulatorpin cpuset="0-1"/>
    <iothreadpin iothread="1" cpuset="0-1"/>
    <iothreadpin iothread="2" cpuset="2-3"/>
  </cputune>


## chercher la ligne "<emulator>/usr/bin/qemu-system-x86_64</emulator>"
# si vous avez compiler un Qemu alors vous devez la modifier par
  <emulator>/usr/local/bin/qemu-system-x86_64</emulator>


## il y a tout un bloc OS, replacez le
# pc-q35-8.0 car on a veut utiliser le Qemu 8 qu'on a compilé
# les lignes loader et vram c'est l'OVMF qu'on a compilé qu'on déclare ici
# l'ajout de smbios c'est pour envoyer nos informations de carte mère à la VM, cela s'avère utile pour empêcher les jeux de détecter une VM et nous bloquer avec leur système anti-triche
# pour nvram moi c'est "win11_VARS.fd" car ma VM je lui ai donné le nom "win11"
  <os>
    <type arch="x86_64" machine="pc-q35-8.0">hvm</type>
    <loader readonly="yes" secure="yes" type="pflash">/usr/local/share/ovmf/OVMF_CODE.fd</loader>
    <nvram template="/usr/local/share/ovmf/OVMF_VARS.fd">/var/lib/libvirt/qemu/nvram/win11_VARS.fd</nvram>
    <boot dev="hd"/>
    <smbios mode="host"/>
  </os>


## Pour le son
dans /etc/libvirt/qemu.conf user = "scoony"
dans /etc/apparmor.d/abstractions/libvirt.qemu /run/user/1000/pulse/native rw,